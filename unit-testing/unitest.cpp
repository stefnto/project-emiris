#include "../hdr/Curves.hpp"

#include "acutest.h"



void snapping_discrete(void){

  std::string curve = "a	40.13	40.617	40.12	39.89	40.13	40.081	40.12	39.701	39.431	38.692	38.089	38.596	39.751	39.461	38.992	38.449	37.973	36.952	37.188	36.877	37.099	38.548	37.729	38.06	37.672	36.942	37.39	36.718	37.615	38.518	38.022	38.431	38.247	37.954	38.568	38.237	38.907	39.032	39.391	40.384	40.005	40.782	40.569	40.89	41.026	41.18	41.035	41.512	41.084	40.831	41.045	40.374	40.579	39.501	39.711	39.958	39.731	40.649	40.422	40.95	41.035	41.035	41.026	39.948	39.673	39.569	40.064	40.66	40.493	40.338	40.983	40.864	41.361	41.184	41.41	42.442	41.946	41.975	42.278	42.033	41.888	42.091	41.8	41.625	41.536	41.41	40.913	41.108	40.893	40.319	40.766	40.873	40.533	40.533	40.736	41.42	41.536	40.844	40.746	40.983	40.973	41.546	41.293	41.527	41.244	41.42	40.993	41.527	40.687	40.142	39.881	40.064	40.055	39.511	39.284	38.935	39.101	39.491	39.501	38.827	38.515	38.778	38.594	38.885	38.485	38.798	38.594	39.17	39.031	39.101	37.851	37.692	38.356	38.67	38.455	38.875	37.861	38.025	38.494	39.041	39.56	39.207	39.412	39.031	39.14	38.66	39.402	39.324	38.406	38.699	39.522	39.472	40.028	40.008	40.058	39.684	39.783	39.198	39.071	39.541	38.514	37.995	37.674	37.761	37.927	38.123	37.518	36.647	35.397	33.883	33.57	34.801	35.798	35.671	35.476	33.95	34.713	34.928	34.255	35.378	34.723	35.036	35.134	34.732	35.318	35.681	35.564	34.918	34.87	34.246	34.147	33.757	33.757	32.699	33.061	33.638	33.061	33.97	34.629	34.198	34.823	35.284	35.501	35.264	34.911	34.342	34.863	35.059	35.501	35.588	35.176	35.363	36.362	36.088	36.303	36.764	36.94	36.998	37.813	37.5	37.567	37.529	37.371	37.157	37.215	36.901	36.734	36.03	36.577	37.607	38.548	37.723	38.488	39.223	39.851	40.507	41.125	40.979	40.233	39.607	39.34	40.273	39.881	40.34	40.154	40.419	39.379	39.439	39.988	40.596	39.959	39.291	40.007	40.389	40.929	41.291	40.939	41.506	41.321	41.079	39.979	39.842	40.018	38.317	37.916	37.278	37.523	36.216	36.952	36.463	36.55	36.608	36.579	37.315	36.952	36.856	36.403	35.48	36.991	37.031	36.423	36.54	36.766	35.411	34.193	34.751	35.224	34.713	35.587	36.433	37.21	36.54	36.786	37.365	36.521	36.826	36.971	36.933	36.698	37.916	38.357	38.515	38.653	38.741	37.424	37.464	37.315	38.545	38.337	37.622	38.3	38.604	39.489	38.957	39.183	38.78	38.741	38.829	39.459	39.419	39.155	39.719	39.425	38.687	39.652	38.892	38.961	38.833	39.17	40.095	40.183	40.311	40.705	40.794	40.913	41.317	41.188	41.021	40.715	40.973	40.578	40.321	41.1	40.638	39.928	40.36	40.824	40.724	41.386	41.839	42.105	41.997	42.313	43.759	43.672	43.909	44.233	43.919	44.372	44.756	44.844	45.149	45.218	45.277	45.228	45.052	45.188	45.082	45.476	45.417	44.697	44.263	44.253	44.283	44.707	44.697	45.466	45.485	45.357	45.997	43.475	41.643	42.479	43.121	43.826	44.064	43.224	43.935	43.886	44.933	44.854	45.97	45.852	46.237	46.108	46.237	46.415	46.445	46.108	46.02	45.585	46.385	46.692	46.938	47.532	47.293	46.612	46.523	46.267	46.918	46.662	46.878	46.938	47.551	47.56	47.857	47.699	47.848	46.157	47.048	47.008	47.245	46.138	46.692	46.751	47.048	46.573	46.415	46.425	46.435	46.385	46.543	46.454	44.34	45.199	44.36	44.321	44.893	44.251	44.41	45.159	45.486	46.108	46.05	46.01	46.138	46.612	45.852	46.639	46.689	46.381	46.699	46.846	46.926	47.233	45.252	45.035	44.728	44.648	44.718	45.006	45.579	45.608	45.133	45.412	43.094	42.955	42.965	42.805	43.152	43.074	42.845	43.241	43.896	45.272	45.182	45.5	46.579	45.927	44.896	44.966	45.738	45.5	44.608	44.54	44.035	44.222	44.46	43.182	44.055	43.559	42.795	43.609	44.104	44.411	44.56	45.362	45.857	45.698	45.945	45.698	46.114	45.471	44.996	45.768	45.598	45.53	45.758	46.065	45.282	45.334	45.254	46.178	46.784	46.228	47.668	47.817	47.777	48.92	48.194	48.363	47.996	47.927	47.32	47.3	47.072	47.033	48.085	47.847	48.324	47.35	48.641	48.93	48.572	49.049	48.94	49.307	49.594	50.131	50.022	50.181	50.051	51.274	50.499	51.284	51.006	50.996	51.125	51.393	51.313	50.956	51.691	51.035	51.631	50.906	50.866	51.065	51.085	51.8	52.098	51.86	53.737	52.694	52.953	52.793	52.307	52.773	52.823	52.724	52.883	53.082	52.763	52.963	52.646	52.975	52.397	52.487	52.925	52.616	52.496	52.606	52.327	52.108	53.233	52.805	52.845	52.905	53.044	54.209	54.577	54.597	55.195	54.817	55.563	55.693	55.922	56.459	56.4	56.081	56.629	56.031	55.991	55.922	56.459	56.589	55.533	55.613	55.892	55.842	58.411	58.978	59.048	59.258	60.114	60.084	60.472	60.552	60.144	59.845	60.373	59.894	58.958	58.74	59.028	59.128	58.958	59.258	60.293	60.074	59.536	60.353	59.516	58.988	58.63	59.148	58.681	59.19	59.01	59.649	59.1	59.509	59.739	59.679	60.607	61.066	61.395	61.425	61.086	61.256	60.857	61.246	61.375	60.417	59.599	59.789	59.958	59.669	59.819	60.078	60.248	60.008	60.747	60.018	59.559	58.451	59.21	59.499	59.26	62.014	60.737	61.126	61.615	62.833	62.643	62.553	62.773	63.331	63.361	63.771	64.589	64.25	64.16	64.579	65.008	64.888	65.976	66.006	65.307	65.547	65.826	65.946	66.036	65.956	65.787	65.647	64.599	63.98	64.26	63.85	64.07	64.87	65.15	65.83	65.7	66.36	66.56	66.6	66.62	67.54	66.99	66.91	66.12	66.44	66.88	67.25	67.02	67.32	67.39	67.71	67.97	67.49	68.03	68.02	68.13	68.37	68.22	68.25	68.11	67.47	66.81";

  Frechet_point fp(curve);

  Discrete_snapping snapper(10);

  snapper.operator()(&fp);

  TEST_CHECK(fp.get_altered_coordinates_size() < fp.get_coordinates_size());
}

void snapping_continuous(void){

  std::string curve = "a	40.13	40.617	40.12	39.89	40.13	40.081	40.12	39.701	39.431	38.692	38.089	38.596	39.751	39.461	38.992	38.449	37.973	36.952	37.188	36.877	37.099	38.548	37.729	38.06	37.672	36.942	37.39	36.718	37.615	38.518	38.022	38.431	38.247	37.954	38.568	38.237	38.907	39.032	39.391	40.384	40.005	40.782	40.569	40.89	41.026	41.18	41.035	41.512	41.084	40.831	41.045	40.374	40.579	39.501	39.711	39.958	39.731	40.649	40.422	40.95	41.035	41.035	41.026	39.948	39.673	39.569	40.064	40.66	40.493	40.338	40.983	40.864	41.361	41.184	41.41	42.442	41.946	41.975	42.278	42.033	41.888	42.091	41.8	41.625	41.536	41.41	40.913	41.108	40.893	40.319	40.766	40.873	40.533	40.533	40.736	41.42	41.536	40.844	40.746	40.983	40.973	41.546	41.293	41.527	41.244	41.42	40.993	41.527	40.687	40.142	39.881	40.064	40.055	39.511	39.284	38.935	39.101	39.491	39.501	38.827	38.515	38.778	38.594	38.885	38.485	38.798	38.594	39.17	39.031	39.101	37.851	37.692	38.356	38.67	38.455	38.875	37.861	38.025	38.494	39.041	39.56	39.207	39.412	39.031	39.14	38.66	39.402	39.324	38.406	38.699	39.522	39.472	40.028	40.008	40.058	39.684	39.783	39.198	39.071	39.541	38.514	37.995	37.674	37.761	37.927	38.123	37.518	36.647	35.397	33.883	33.57	34.801	35.798	35.671	35.476	33.95	34.713	34.928	34.255	35.378	34.723	35.036	35.134	34.732	35.318	35.681	35.564	34.918	34.87	34.246	34.147	33.757	33.757	32.699	33.061	33.638	33.061	33.97	34.629	34.198	34.823	35.284	35.501	35.264	34.911	34.342	34.863	35.059	35.501	35.588	35.176	35.363	36.362	36.088	36.303	36.764	36.94	36.998	37.813	37.5	37.567	37.529	37.371	37.157	37.215	36.901	36.734	36.03	36.577	37.607	38.548	37.723	38.488	39.223	39.851	40.507	41.125	40.979	40.233	39.607	39.34	40.273	39.881	40.34	40.154	40.419	39.379	39.439	39.988	40.596	39.959	39.291	40.007	40.389	40.929	41.291	40.939	41.506	41.321	41.079	39.979	39.842	40.018	38.317	37.916	37.278	37.523	36.216	36.952	36.463	36.55	36.608	36.579	37.315	36.952	36.856	36.403	35.48	36.991	37.031	36.423	36.54	36.766	35.411	34.193	34.751	35.224	34.713	35.587	36.433	37.21	36.54	36.786	37.365	36.521	36.826	36.971	36.933	36.698	37.916	38.357	38.515	38.653	38.741	37.424	37.464	37.315	38.545	38.337	37.622	38.3	38.604	39.489	38.957	39.183	38.78	38.741	38.829	39.459	39.419	39.155	39.719	39.425	38.687	39.652	38.892	38.961	38.833	39.17	40.095	40.183	40.311	40.705	40.794	40.913	41.317	41.188	41.021	40.715	40.973	40.578	40.321	41.1	40.638	39.928	40.36	40.824	40.724	41.386	41.839	42.105	41.997	42.313	43.759	43.672	43.909	44.233	43.919	44.372	44.756	44.844	45.149	45.218	45.277	45.228	45.052	45.188	45.082	45.476	45.417	44.697	44.263	44.253	44.283	44.707	44.697	45.466	45.485	45.357	45.997	43.475	41.643	42.479	43.121	43.826	44.064	43.224	43.935	43.886	44.933	44.854	45.97	45.852	46.237	46.108	46.237	46.415	46.445	46.108	46.02	45.585	46.385	46.692	46.938	47.532	47.293	46.612	46.523	46.267	46.918	46.662	46.878	46.938	47.551	47.56	47.857	47.699	47.848	46.157	47.048	47.008	47.245	46.138	46.692	46.751	47.048	46.573	46.415	46.425	46.435	46.385	46.543	46.454	44.34	45.199	44.36	44.321	44.893	44.251	44.41	45.159	45.486	46.108	46.05	46.01	46.138	46.612	45.852	46.639	46.689	46.381	46.699	46.846	46.926	47.233	45.252	45.035	44.728	44.648	44.718	45.006	45.579	45.608	45.133	45.412	43.094	42.955	42.965	42.805	43.152	43.074	42.845	43.241	43.896	45.272	45.182	45.5	46.579	45.927	44.896	44.966	45.738	45.5	44.608	44.54	44.035	44.222	44.46	43.182	44.055	43.559	42.795	43.609	44.104	44.411	44.56	45.362	45.857	45.698	45.945	45.698	46.114	45.471	44.996	45.768	45.598	45.53	45.758	46.065	45.282	45.334	45.254	46.178	46.784	46.228	47.668	47.817	47.777	48.92	48.194	48.363	47.996	47.927	47.32	47.3	47.072	47.033	48.085	47.847	48.324	47.35	48.641	48.93	48.572	49.049	48.94	49.307	49.594	50.131	50.022	50.181	50.051	51.274	50.499	51.284	51.006	50.996	51.125	51.393	51.313	50.956	51.691	51.035	51.631	50.906	50.866	51.065	51.085	51.8	52.098	51.86	53.737	52.694	52.953	52.793	52.307	52.773	52.823	52.724	52.883	53.082	52.763	52.963	52.646	52.975	52.397	52.487	52.925	52.616	52.496	52.606	52.327	52.108	53.233	52.805	52.845	52.905	53.044	54.209	54.577	54.597	55.195	54.817	55.563	55.693	55.922	56.459	56.4	56.081	56.629	56.031	55.991	55.922	56.459	56.589	55.533	55.613	55.892	55.842	58.411	58.978	59.048	59.258	60.114	60.084	60.472	60.552	60.144	59.845	60.373	59.894	58.958	58.74	59.028	59.128	58.958	59.258	60.293	60.074	59.536	60.353	59.516	58.988	58.63	59.148	58.681	59.19	59.01	59.649	59.1	59.509	59.739	59.679	60.607	61.066	61.395	61.425	61.086	61.256	60.857	61.246	61.375	60.417	59.599	59.789	59.958	59.669	59.819	60.078	60.248	60.008	60.747	60.018	59.559	58.451	59.21	59.499	59.26	62.014	60.737	61.126	61.615	62.833	62.643	62.553	62.773	63.331	63.361	63.771	64.589	64.25	64.16	64.579	65.008	64.888	65.976	66.006	65.307	65.547	65.826	65.946	66.036	65.956	65.787	65.647	64.599	63.98	64.26	63.85	64.07	64.87	65.15	65.83	65.7	66.36	66.56	66.6	66.62	67.54	66.99	66.91	66.12	66.44	66.88	67.25	67.02	67.32	67.39	67.71	67.97	67.49	68.03	68.02	68.13	68.37	68.22	68.25	68.11	67.47	66.81";

  Frechet_query fp(curve);
  Continuous_snapping snapper(10);

  std::vector<double> timeseries_filtered;

  timeseries_filtered = fp.getCoordinates();

  filtering(timeseries_filtered);                                               // filtering the timeseries

  fp.set_coordinates(timeseries_filtered);

  snapper.operator()(&fp);

  TEST_CHECK(fp.get_altered_coordinates_size() < fp.get_coordinates_size());
}


TEST_LIST = {
    { "snapping_discrete", snapping_discrete },
    { "snapping_continuous", snapping_continuous },
    { NULL, NULL }
};
